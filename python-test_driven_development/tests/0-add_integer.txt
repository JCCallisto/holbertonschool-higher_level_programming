The ``add_integer`` module
============================

Using ``add_integer``
---------------------

This is a doctest file for the add_integer function.

First import the function:
    >>> add_integer = __import__('0-add_integer').add_integer

Test 1 - Basic integer addition:
    >>> add_integer(1, 2)
    3

Test 2 - Using default parameter:
    >>> add_integer(2)
    100

Test 3 - Negative numbers:
    >>> add_integer(100, -2)
    98

Test 4 - Float casting:
    >>> add_integer(100.3, -2)
    98

Test 5 - Both floats:
    >>> add_integer(1.7, 2.8)
    3

Test 6 - TypeError with string as second argument:
    >>> add_integer(4, "School")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

Test 7 - TypeError with None as first argument:
    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Test 8 - Zero values:
    >>> add_integer(0, 0)
    0

Test 9 - Float overflow with infinity:
    >>> add_integer(float('inf'), 1)
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

Test 10 - ValueError with NaN:
    >>> add_integer(float('nan'), 1)
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer
