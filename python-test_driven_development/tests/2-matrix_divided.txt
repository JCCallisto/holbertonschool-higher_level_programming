The ``matrix_divided`` module
================================

Using ``matrix_divided``
------------------------

This is a doctest file for the matrix_divided function.

First import the function:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test 1 - Basic matrix division:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test 2 - TypeError for non-matrix input:
    >>> matrix_divided("not a matrix", 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 3 - TypeError for different row sizes:
    >>> matrix_divided([[1, 2, 3], [4, 5]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Test 4 - ZeroDivisionError for division by zero:
    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Test 5 - TypeError for div as string:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "3")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Test 6 - Division by infinity results in zero:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
